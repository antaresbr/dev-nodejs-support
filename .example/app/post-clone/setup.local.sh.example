#!/bin/bash

echo ""
echo "---[ $(dirname "$(realpath "${SCRIPT_DIR}")") ]---"
echo "---| post-clone/$(basename "${BASH_SOURCE[0]}")"

[ -z "${WORKSPACE_BASE_LIB_SH}" ] && echo -e "post-clone/setup-local | ERROR | WORKSPACE_BASE_LIB_SH not defined" && exit 1
[ -z "${POST_CLONE_SETUP_LIB_SH}" ] && wsError "post-clone/setup-local" "POST_CLONE_SETUP_LIB_SH not defined"
[ -z "${POST_CLONE_LIB_SH}" ] && wsError "post-clone/setup-local" "POST_CLONE_LIB_SH not defined"

#---[ setup-local ]---

function localSailSetup() {
  echo "local sail setup"
}

#-- parameters

pclLoadDefaultAndSavedParams

echo ""

[ -n "${pSailProject}" ] || envVarRead "Sail project" "pSailProject" "default:${default_pSailProject}|required|lower-case" ""
[ -n "${pSailSubproject}" ] || envVarRead "Sail subproject" "pSailSubproject" "default:$(wsCoalesce "${default_pSailSubproject}" "$(basename "$(realpath "${BASE_DIR}")")")|required|lower-case" ""

[ -n "${pNodejsVersion}" ] || envVarRead "NODEJS version" "pNodejsVersion" "default:$(wsCoalesce "${default_pNodejsVersion}" "22")|required" ""
[ -n "${pNodejsCodename}" ] || envVarRead "NODEJS codename" "pNodejsCodename" "default:$(wsCoalesce "${default_pNodejsCodename}" "bookworm")|required|lower-case" ""
[ -n "${pNodejsPort}" ] || envVarRead "NODEJS port" "pNodejsPort" "default:$(wsCoalesce "${default_pNodejsPort}" "7100")|required" ""
[ -n "${pNodejsUserName}" ] || envVarRead "NODEJS user name" "pNodejsUserName" "default:$(wsCoalesce "${default_pNodejsUserName}" "node")|required" ""
[ -n "${pNodejsUserId}" ] || envVarRead "NODEJS user name" "pNodejsUserId" "default:$(wsCoalesce "${default_pNodejsUserId}" "$(id -u)")|required" ""

echo ""
echo "---[ parameters ]---"
echo ""
echo "ENVIRONMENT : ${pEnvironment}"
echo ""
echo "pSailProject         : ${pSailProject}"
echo "pSailSubproject      : ${pSailSubproject}"
echo ""
echo "pNodejsVersion       : ${pNodejsVersion}"
echo "pNodejsCodename      : ${pNodejsCodename}"
echo "pNodejsVersion       : ${pNodejsVersion}"
echo "pNodejsPort          : ${pNodejsPort}"
echo "pNodejsUserName      : ${pNodejsUserName}"
echo "pNodejsUserId        : ${pNodejsUserId}"
echo ""

[ -n "${pConfirm}" ] || envVarRead "Confirm parameters?" "pConfirm" "default:yes|lower-case|hide-values" "y|yes|n|no"
[ "${pConfirm:0:1}" == "y" ] || exit 0

if [ ! -f "${SCRIPT_DIR}/setup.local.env" ]
then
  echo""
  envVarRead "Save post-clone params?" "pSavePostcloneParams" "default:yes|lower-case|hide-values" "y|yes|n|no"
  if [ "${pConfirm:0:1}" == "y" ]
  then
    echo "\
#!/bin/bash
pSailProject=\"${pSailProject}\"
pSailSubproject=\"${pSailSubproject}\"
pNodejsVersion=\"${pNodejsVersion}\"
pNodejsCodename=\"${pNodejsCodename}\"
pNodejsPort=\"${pNodejsPort}\"
pNodejsUserName=\"${pNodejsUserName}\"
pNodejsUserId=\"${pNodejsUserId}\"
" > "${SCRIPT_DIR}/setup.local.env"
  fi
fi

WS_TEMPLATE_FILE_VARS="\
SAIL_PROJECT=${pSailProject}
SAIL_SUBPROJECT=${pSailSubproject}
NODEJS_VERSION=${pNodejsVersion}
NODEJS_CODENAME=${pNodejsCodename}
NODEJS_PORT=${pNodejsPort}
NODEJS_USERNAME=${pNodejsUserName}
NODEJS_USERID=${pNodejsUserId}
"

#-- sail

sailSetup

#-- files

wsTemplateFile "src/BUILD-INFO.json" "src/.example/BUILD-INFO.json.example"
wsTemplateFile "src/ENVIRONMENT.json" "src/.example/ENVIRONMENT.json.example"

#-- build

sailBuild
